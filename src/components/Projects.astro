---
import { icons } from "../icons/icons.astro";
import SocialPhil from "./SocialPhil.astro";
const {
  GithubIcon,
  CloudIcon,
  AWSIcon,
  React,
  NodeJS,
  Express,
  MongoDB,
  JavaScript,
  AstroIcon,
  TailwindIcon,
  SqlIcon,
  PugIcon,
} = icons;

const TAGS = {
  REACT: {
    name: "React",
    class: "bg-black text-white",
    icon: React,
  },
  NODEJS: {
    name: "NodeJS",
    class: "bg-black text-white",
    icon: NodeJS,
  },
  EXPRESS: {
    name: "Express",
    class: "bg-black text-white",
    icon: Express,
  },
  MONGODB: {
    name: "MongoDB",
    class: "bg-black text-white",
    icon: MongoDB,
  },
  AWS: {
    name: "AWS",
    class: "bg-black text-white",
    icon: AWSIcon,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-black text-white",
    icon: JavaScript,
  },
  ASTRO: {
    name: "Astro",
    class: "bg-black text-white",
    icon: AstroIcon,
  },
  TAILWIND: {
    name: "Tailwind",
    class: "bg-black text-white",
    icon: TailwindIcon,
  },
  PUG: {
    name: "PUG",
    class: "bg-blac text-white",
    icon: PugIcon,
  },
  SQL: {
    name: "SQL",
    class: "bg-black text-white",
    icon: SqlIcon,
  },
};

const PROJECTS = [
  {
    title: "Hiinit-Web v1.0",
    description:
      "HiInit Web es una SPA que trata de imitar la interfaz gráfica de una terminal con la capacidad de gestionar diferentes archivos y usuarios basados en roles, emulando así la funcionalidad de un sistema Drive. En ella, los usuarios y el ADMIN, con un CRUD completo, pueden subir, eliminar y descargar sus archivos mediante un sistema de almacenamiento basado en AWS, así como compartirlos con aquellos que integren su mismo grupo y a través de diferentes permisos.",
    link: "https://main--hiinit-web-terminal.netlify.app/",
    github: "https://github.com/abelpriem/HiInit-Web-Terminal.git",
    image: "/projects/hiinit.webp",
    tags: [TAGS.REACT, TAGS.NODEJS, TAGS.EXPRESS, TAGS.MONGODB, TAGS.AWS],
  },
  {
    title: "IdealHouse",
    description:
      "La aplicación web IdealHouse es un portal de venta de inmuebles, clon o tipo Idealista, creado con el motor de plantillas PUG y Tailwind para la implementación de estilos. TIene autenticación de dos pasos vía email y portal de usuario, con el que poder navegar por las propiedades del usuario y recibir mensajes de otros clientes así como la parte genérica en donde poder listar y visualizar todas las propiedades y sus localizaciones.",
    link: "https://idealhouse.onrender.com/",
    github: "https://github.com/abelpriem/IdealHouse",
    image: "/projects/IdealHouse.jpg",
    tags: [TAGS.TAILWIND, TAGS.SQL, TAGS.NODEJS, TAGS.EXPRESS],
  },
  {
    title: "DevJobs",
    description:
      "DevJobs es un portal de empleo destinado para reclutadores en la que poder añadir vacantes y ofertas de trabajo, especializado en el sector tecnológico. En ella, los usuarios podrán visualizar los stacks, descripciones y salarios de las vacantes así como aplicar en ellas sus currículums. Por otro lado, los reclutadores logeados contarán con un panel de administración en el que poder realizar un CRUD completo así como listar las vacantes y el número de candidatos que han aplicado",
    link: "https://devjobsweb.netlify.app/",
    github: "https://github.com/abelpriem/devJobs",
    image: "/projects/devjobs.webp",
    tags: [TAGS.REACT, TAGS.MONGODB, TAGS.NODEJS, TAGS.EXPRESS, TAGS.TAILWIND],
  },
  {
    title: "Portfolio",
    description:
      "Utilización e implementación de nuevas tecnologías como Astro para la creación y el desarrollo de este mismo porfolio y usando Tailwind para la estilización de todos y cada uno de los componentes.",
    link: "",
    github: "https://github.com/abelpriem/porfolio-abel.git",
    image: "/projects/portfolio.webp",
    tags: [TAGS.ASTRO, TAGS.TAILWIND],
  },
  {
    title: "API Rest -  Social Media",
    description:
      "Esta es una API Rest totalmente operativa y funcional, creada desde cero, para poder implementar en un sitio web de redes sociales con un sistema CRUD completo. Es capaz de crear diferentes usuarios con sus propias publicaciones, con la posibilidad de seguir a diferentes usuarios, subir sus avatares y descargarlos de la misma manera.",
    link: "",
    github: "https://github.com/abelpriem/API-SOCIAL-MEDIA.git",
    image: "/projects/socialmedia.webp",
    tags: [TAGS.NODEJS, TAGS.EXPRESS, TAGS.MONGODB],
  },
  {
    title: "API Rest -  Blog",
    description:
      "Otra API Rest completa , lista para poder implantar en un modelo web especializado en artículos blog. En esta API, podremos crear usuarios y hacer peticiones de artículos, asociándoles imágenes a través de un sistema de carga de archivos local así como la posibilidad de listarlos a través de un buscador.",
    link: "",
    github: "https://github.com/abelpriem/API-Rest-Blog.git",
    image: "/projects/apiblog.webp",
    tags: [TAGS.NODEJS, TAGS.EXPRESS, TAGS.MONGODB],
  },
];
---

{
  PROJECTS.map(({ title, description, tags, image, link, github }) => (
    <article class="p-4 mb-4">
      <h3 class="2xl font-semibold underline text-yellow-600 dark:text-yellow-200 mb-2">
        {title}
      </h3>
      <span class="flex gap-x-2 mb-2">
        {link && (
          <p>
            <SocialPhil href={link} target="_blank" rel="noopener">
              <CloudIcon class="size-4 md:size-6 hoover:text-red" />
              Online
            </SocialPhil>
          </p>
        )}
        {github && (
          <p>
            <SocialPhil href={github} target="_blank" rel="noopener">
              <GithubIcon class="size-4 md:size-6" />
              Link a GitHub
            </SocialPhil>
          </p>
        )}
      </span>
      <ul class="flex gap-x-4 flex-row">
        {tags.map((tag) => (
          <li>
            <span
              class={`flex items-center gap-x-2 rounded-full text-xs py-2 px-1 bg-gray-500 dark:bg-transparent dark:text-white bg-gray-[#1e252e]  text-white`}
            >
              <tag.icon class="size-8" />
              {tag.name}
            </span>
          </li>
        ))}
      </ul>
      <p class="text-lg mb-4 tex-pretty opacity-80 text-black dark:text-white">
        {description}
      </p>

      <img
        class="w-full rounded shadow-2xl shadow-black/10 dark:shadow-white/10"
        src={image}
        alt={`Captura de pantalla del proyecto ${title}`}
      />
    </article>
  ))
}
